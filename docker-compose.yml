version: '3.2'

services:
  db:
    # https://hub.docker.com/_/mysql
    container_name: db
    build:
      context: ./docker
      dockerfile: ./db/Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      # To create user use:
      # MYSQL_DATABASE: $DB_NAME
      # MYSQL_USER: $DB_USER
      # MYSQL_PASSWORD: $DB_USER_PASSWORD
    volumes:
      - $DB_PATH_DATA:/var/lib/mysql
      - $DB_PATH_LOG:/var/log/mysql
    networks:
      development:
        ipv4_address: $DB_IP_ADDRESS
    ports:
    - $DB_PORT:3306
    deploy:
      resources:
        limits:
          cpus: $DB_CORE
          memory: $DB_MEMORY

  mssql:
    image: mcr.microsoft.com/mssql/server:2017-latest
    container_name: mssql
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: $DB_ROOT_PASSWORD
    networks:
      development:
        ipv4_address: 172.20.0.11
    ports:
    - 1433:1433
    deploy:
      resources:
        limits:
          cpus: $DB_CORE
          memory: $DB_MEMORY

  cache:
    image: redis:alpine
    container_name: cache
    # Optional save data in host
    # volumes:
    # - $CACHE_PATH_DATA:/data
    ## Password redis-cli is: $CACHE_USER_PASSWORD
    ## Set password in redis-cli command exec: config set requirepass $CACHE_USER_PASSWORD
    networks:
      development:
        ipv4_address: $CACHE_IP_ADDRESS
    deploy:
      resources:
        limits:
          cpus: $CACHE_CORE
          memory: $CACHE_MEMORY

  apache81:
    container_name: apache81
    build:
      context: ./docker
      dockerfile: ./php81/Dockerfile
      args:
        - DEV_ENABLE=${DEV_ENABLE:-off}
        - CACHE_ENABLE=${CACHE_ENABLE:-on}
        - PROXY_ENABLE=${PROXY_ENABLE:-off}
        - XDEBUG_ENABLE=${XDEBUG_ENABLE:-off}
        - PDFTK_ENABLE=${PDFTK_ENABLE:-off}
        - GNUPG_ENABLE=${GNUPG_ENABLE:-off}
    volumes:
      - $WEB_DOCROOT:/var/www/html
    networks:
      development:
        ipv4_address: 172.20.0.81
    expose:
    - 80
    - 443
    extra_hosts:
      - "host.docker.internal:${HOST_DOCKER}"
    deploy:
      resources:
        limits:
          cpus: $WEB_CORE
          memory: $WEB_MEMORY

  apache80:
    container_name: apache80
    build:
      context: ./docker
      dockerfile: ./php80/Dockerfile
      args:
        - DEV_ENABLE=${DEV_ENABLE:-off}
        - CACHE_ENABLE=${CACHE_ENABLE:-on}
        - PROXY_ENABLE=${PROXY_ENABLE:-off}
        - XDEBUG_ENABLE=${XDEBUG_ENABLE:-off}
        - PDFTK_ENABLE=${PDFTK_ENABLE:-off}
        - GNUPG_ENABLE=${GNUPG_ENABLE:-off}
    volumes:
      - $WEB_DOCROOT:/var/www/html
    networks:
      development:
        ipv4_address: 172.20.0.80
    expose:
    - 80
    - 443
    extra_hosts:
      - "host.docker.internal:${HOST_DOCKER}"
    deploy:
      resources:
        limits:
          cpus: $WEB_CORE
          memory: $WEB_MEMORY

  apache74:
    container_name: apache74
    build:
      context: ./docker
      dockerfile: ./php74/Dockerfile
      args:
        - DEV_ENABLE=${DEV_ENABLE:-off}
        - CACHE_ENABLE=${CACHE_ENABLE:-on}
        - PROXY_ENABLE=${PROXY_ENABLE:-off}
        - XDEBUG_ENABLE=${XDEBUG_ENABLE:-off}
        - PDFTK_ENABLE=${PDFTK_ENABLE:-off}
        - GNUPG_ENABLE=${GNUPG_ENABLE:-off}
    volumes:
      - $WEB_DOCROOT:/var/www/html
    networks:
      development:
        ipv4_address: 172.20.0.74
    expose:
    - 80
    - 443
    extra_hosts:
      - "host.docker.internal:${HOST_DOCKER}"
    deploy:
      resources:
        limits:
          cpus: $WEB_CORE
          memory: $WEB_MEMORY

  apache73:
    container_name: apache73
    build:
      context: ./docker
      dockerfile: ./php73/Dockerfile
      args:
        - DEV_ENABLE=${DEV_ENABLE:-off}
        - CACHE_ENABLE=${CACHE_ENABLE:-on}
        - PROXY_ENABLE=${PROXY_ENABLE:-off}
        - XDEBUG_ENABLE=${XDEBUG_ENABLE:-off}
        - PDFTK_ENABLE=${PDFTK_ENABLE:-off}
        - GNUPG_ENABLE=${GNUPG_ENABLE:-off}
    volumes:
      - $WEB_DOCROOT:/var/www/html
    networks:
      development:
        ipv4_address: 172.20.0.73
    expose:
    - 80
    - 443
    extra_hosts:
      - "host.docker.internal:${HOST_DOCKER}"
    deploy:
      resources:
        limits:
          cpus: $WEB_CORE
          memory: $WEB_MEMORY

  apache72:
    container_name: apache72
    build:
      context: ./docker
      dockerfile: ./php72/Dockerfile
      args:
        - DEV_ENABLE=${DEV_ENABLE:-off}
        - CACHE_ENABLE=${CACHE_ENABLE:-on}
        - PROXY_ENABLE=${PROXY_ENABLE:-off}
        - XDEBUG_ENABLE=${XDEBUG_ENABLE:-off}
        - PDFTK_ENABLE=${PDFTK_ENABLE:-off}
        - GNUPG_ENABLE=${GNUPG_ENABLE:-off}
    volumes:
      - $WEB_DOCROOT:/var/www/html
    networks:
      development:
        ipv4_address: 172.20.0.72
    expose:
    - 80
    - 443
    extra_hosts:
      - "host.docker.internal:${HOST_DOCKER}"
    deploy:
      resources:
        limits:
          cpus: $WEB_CORE
          memory: $WEB_MEMORY

  apache71:
    container_name: apache71
    build:
      context: ./docker
      dockerfile: ./php71/Dockerfile
      args:
        - DEV_ENABLE=${DEV_ENABLE:-off}
        - CACHE_ENABLE=${CACHE_ENABLE:-on}
        - PROXY_ENABLE=${PROXY_ENABLE:-off}
        - XDEBUG_ENABLE=${XDEBUG_ENABLE:-off}
        - PDFTK_ENABLE=${PDFTK_ENABLE:-off}
        - GNUPG_ENABLE=${GNUPG_ENABLE:-off}
    volumes:
      - $WEB_DOCROOT:/var/www/html
    networks:
      development:
        ipv4_address: 172.20.0.71
    expose:
    - 80
    - 443
    extra_hosts:
      - "host.docker.internal:${HOST_DOCKER}"
    deploy:
      resources:
        limits:
          cpus: $WEB_CORE
          memory: $WEB_MEMORY

  apache70:
    container_name: apache70
    build:
      context: ./docker
      dockerfile: ./php70/Dockerfile
      args:
        - DEV_ENABLE=${DEV_ENABLE:-off}
        - CACHE_ENABLE=${CACHE_ENABLE:-on}
        - PROXY_ENABLE=${PROXY_ENABLE:-off}
        - XDEBUG_ENABLE=${XDEBUG_ENABLE:-off}
        - PDFTK_ENABLE=${PDFTK_ENABLE:-off}
        - GNUPG_ENABLE=${GNUPG_ENABLE:-off}
    volumes:
      - $WEB_DOCROOT:/var/www/html
    networks:
      development:
        ipv4_address: 172.20.0.70
    expose:
    - 80
    - 443
    extra_hosts:
      - "host.docker.internal:${HOST_DOCKER}"
    deploy:
      resources:
        limits:
          cpus: $WEB_CORE
          memory: $WEB_MEMORY

  apache56:
    container_name: apache56
    build:
      context: ./docker
      dockerfile: ./php56/Dockerfile
      args:
        - DEV_ENABLE=${DEV_ENABLE:-off}
        - CACHE_ENABLE=${CACHE_ENABLE:-on}
        - PROXY_ENABLE=${PROXY_ENABLE:-off}
        - XDEBUG_ENABLE=${XDEBUG_ENABLE:-off}
        - PDFTK_ENABLE=${PDFTK_ENABLE:-off}
        - GNUPG_ENABLE=${GNUPG_ENABLE:-off}
    volumes:
      - $WEB_DOCROOT:/var/www/html
    networks:
      development:
        ipv4_address: 172.20.0.56
    expose:
    - 80
    - 443
    extra_hosts:
      - "host.docker.internal:${HOST_DOCKER}"
    deploy:
      resources:
        limits:
          cpus: $WEB_CORE
          memory: $WEB_MEMORY

  supervisor:
    container_name: supervisor
    build:
      context: ./docker
      dockerfile: ./supervisor/Dockerfile
      args:
        - DEV_ENABLE=${DEV_ENABLE:-off}
    volumes:
      - $WEB_DOCROOT:/var/www/html
    networks:
      development:
        ipv4_address: 172.20.0.50
    ports:
    - $QUEUE_PORT:9001
    deploy:
      resources:
        limits:
          cpus: $QUEUE_CORE
          memory: $QUEUE_MEMORY

  proxy:
    container_name: proxy
    build:
      context: ./docker
      dockerfile: ./proxy/Dockerfile
    networks:
      development:
        ipv4_address: $PROXY_IP_ADDRESS
    ports:
    - '80:80'
    - '443:443'
    - '32700:32700'
    deploy:
      resources:
        limits:
          cpus: $PROXY_CORE
          memory: $PROXY_MEMORY

  pentesting:
    container_name: pentesting
    build:
      context: ./docker
      dockerfile: ./pentesting/Dockerfile
    volumes:
      - $WEB_DOCROOT:/var/www/html
    networks:
      development:
        ipv4_address: 172.20.0.99
    extra_hosts:
      - development.local:$PROXY_IP_ADDRESS

  zap:
    container_name: zap
    build:
      context: ./docker
      dockerfile: ./zap/Dockerfile
    volumes:
      - $WEB_DOCROOT:/var/www/html
    networks:
      development:
        ipv4_address: 172.20.0.98
    ports:
    - '2375:2375'
    extra_hosts:
      - development.local:$PROXY_IP_ADDRESS

  ftp:
    image: atmoz/sftp:alpine
    container_name: ftp
    volumes:
      - $FTP_DOCROOT:/home/$FTP_USER
    command: $FTP_USER:$FTP_PASSWORD:$FTP_UUID
    networks:
      development:
        ipv4_address: 172.20.0.97
    ports:
    - '8022:22'
    extra_hosts:
      - development.local:$PROXY_IP_ADDRESS
    deploy:
      resources:
        limits:
          cpus: $FTP_CORE
          memory: $FTP_MEMORY

  kftp:
    image: atmoz/sftp:alpine
    container_name: kftp
    volumes:
      - $KFTP_DOCROOT:/home/$KFTP_USER
      - ./kftp/sshd_config:/etc/ssh/sshd_config
      - ./kftp/ssh/id_rsa.pub.kftpusr:/home/$KFTP_USER/.ssh/keys/id_rsa.pub:ro
    command:
      - $KFTP_USER::$KFTP_UUID
    networks:
      development:
        ipv4_address: 172.20.0.96
    ports:
    - '8023:22'
    extra_hosts:
      - development.local:$PROXY_IP_ADDRESS
    deploy:
      resources:
        limits:
          cpus: $KFTP_CORE
          memory: $KFTP_MEMORY

networks:
  development:
    external: true
