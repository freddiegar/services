global
    log stdout user
    user haproxy
    ssl-server-verify none

defaults
    log global
    # @see: https://www.haproxy.com/blog/introduction-to-haproxy-logging/
    # Only debug!
    # option httplog
    maxconn 200
    balance leastconn
    timeout connect 5s
    timeout check 5s
    timeout client 30s
    timeout server 30s
    # @see: https://delta.blue/blog/haproxy-timeouts/
    timeout http-request 10s
    timeout http-keep-alive 2s
    timeout queue 5s
    timeout tunnel 2m
    timeout client-fin 1s
    timeout server-fin 1s
    option dontlognull
    option http-keep-alive
    http-check connect
    http-check send meth HEAD uri / ver HTTP/1.1 hdr Host localhost
    http-check expect status 200-399
    http-check connect port 443 ssl sni localhost
    http-check send meth HEAD uri / ver HTTP/1.1 hdr Host localhost
    http-check expect status 200-399
    errorfile 400 /usr/local/etc/haproxy/errors/400.http
    errorfile 403 /usr/local/etc/haproxy/errors/403.http
    errorfile 408 /usr/local/etc/haproxy/errors/408.http
    errorfile 500 /usr/local/etc/haproxy/errors/500.http
    errorfile 502 /usr/local/etc/haproxy/errors/502.http
    errorfile 503 /usr/local/etc/haproxy/errors/503.http
    errorfile 504 /usr/local/etc/haproxy/errors/504.http

frontend http-frontend
    mode http
    bind *:80
    default_backend http-74
    option forwardfor except 127.0.0.1/8
    http-response set-header X-Cache-Status HIT if !{ srv_id -m found }
    http-response set-header X-Cache-Status MISS if { srv_id -m found }

    acl php-81 req.hdr(host) -i     sites.development.local
    acl php-81 req.hdr(host) -i     exito.development.local
    acl php-81 req.hdr(host) -i     vur.development.local
    acl php-81 req.hdr(host) -i     checkout.development.local
    acl php-81 req.hdr(host) -i     vtex.development.local
    acl php-81 req.hdr(host) -i     mpi.development.local
    acl php-81 req.hdr(host) -i     b-mpi.development.local
    acl php-81 req.hdr(host) -i     acs.development.local
    acl php-81 req.hdr(host) -i     b-acs.development.local
    acl php-81 req.hdr(host) -i     accounts.development.local
    acl php-81 req.hdr(host) -i     panel.development.local
    acl php-81 req.hdr(host) -i     msv.development.local
    acl php-81 req.hdr(host) -i     tsp.development.local
    acl php-81 req.hdr(host) -i     spa.development.local
    use_backend http-81 if          php-81

backend http-74
    mode http
    # @see https://www.haproxy.com/blog/accelerate-your-apis-by-using-the-haproxy-cache/
    # @see https://cbonte.github.io/haproxy-dconv/1.8/configuration.html#cache
    http-request cache-use web-cache
    http-response cache-store web-cache
    # @see https://www.haproxy.com/documentation/aloha/12-0/traffic-management/lb-layer7/health-checks/
    server http-74 172.20.0.74:80 check fall 2 inter 60s

backend http-80
    mode http
    http-request cache-use web-cache
    http-response cache-store web-cache
    server http-80 172.20.0.80:80 check fall 2 inter 60s

backend http-81
    mode http
    http-request cache-use web-cache
    http-response cache-store web-cache
    server http-81 172.20.0.81:80 check fall 2 inter 60s

backend http-82
    mode http
    http-request cache-use web-cache
    http-response cache-store web-cache
    server http-82 172.20.0.82:80 check fall 2 inter 60s

frontend https-frontend
    mode tcp
    bind *:443
    default_backend https-74
    tcp-request inspect-delay 5s
    tcp-request content accept if { req.ssl_hello_type 1 }

    # @see https://www.haproxy.com/blog/introduction-to-haproxy-acls/
    acl php-81 req.ssl_sni -i           sites.development.local
    acl php-81 req.ssl_sni -i           exito.development.local
    acl php-81 req.ssl_sni -i           vur.development.local
    acl php-81 req.ssl_sni -i           checkout.development.local
    acl php-81 req.ssl_sni -i           vtex.development.local
    acl php-81 req.ssl_sni -i           mpi.development.local
    acl php-81 req.ssl_sni -i           b-mpi.development.local
    acl php-81 req.ssl_sni -i           acs.development.local
    acl php-81 req.ssl_sni -i           b-acs.development.local
    acl php-81 req.ssl_sni -i           accounts.development.local
    acl php-81 req.ssl_sni -i           panel.development.local
    acl php-81 req.ssl_sni -i           msv.development.local
    acl php-81 req.ssl_sni -i           tsp.development.local
    acl php-81 req.ssl_sni -i           spa.development.local
    use_backend https-81 if             php-81

# Don't use mode http in 443!, it throws error:
#   curl:       1408F10B - ssl3_get_record: wrong version number
#   browser:    Error code: SSL_ERROR_RX_RECORD_TOO_LONG

backend https-74
    mode tcp
    server https-74 172.20.0.74:443 check fall 2 inter 60s

backend https-80
    mode tcp
    server https-80 172.20.0.80:443 check fall 2 inter 60s

backend https-81
    mode tcp
    server https-81 172.20.0.81:443 check fall 2 inter 60s

backend https-82
    mode tcp
    server https-82 172.20.0.82:443 check fall 2 inter 60s

cache web-cache
    total-max-size 512    # MB
    max-object-size 256   # bytes
    max-age 60            # seconds

listen stats
    bind *:32700
    mode http
    stats enable
    stats hide-version
    stats realm Statics
    stats uri /stats
    stats auth admin:PassH4Pr0x!
    stats refresh 5s
