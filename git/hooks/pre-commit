#!/bin/sh

# Run checker user before continue
# @thanks https://victoria.dev/blog/an-automatic-interactive-pre-commit-checklist-in-the-style-of-infomercials/
echo -n "Do you want commit on [\e[90m${PWD##*/}\e[0m] as \e[1;32m`git config --get user.name`\e[0m? (y/N): "

exec < /dev/tty

read RESPONSE

if [ "$RESPONSE" != "y" ]; then
    echo "\e[31mCommit canceled!\e[0m"

    exit 1
fi

exec <&-

FSTAGING=`git ls-files --modified | grepx ".php$" | wc -l`
FMODIFING=`git diff --name-only --cached | xargs -r -l echo | grepx ".php$" | wc -l`
FCOMPOSER=`git diff --name-only --cached | xargs -r -l echo | grepx "composer.[json|lock]" | wc -l`
FPHP=$(($FSTAGING + $FMODIFING + $FCOMPOSER))

phpx /usr/local/bin/composer validate --no-check-all --strict || exit $?

phpx /usr/local/bin/composer audit || exit $?

# Run fixer before add message to commit
if [ $FPHP = 0 ]; then
    echo -n ""
elif [ -f .php_cs ]; then
    phpx vendor/bin/php-cs-fixer fix --config=.php_cs -v || exit $?
elif [ -f .php-cs-fixer.php ]; then
    phpx vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php -v || exit $?
elif [ -f .phpcs.xml ]; then
    phpx vendor/bin/phpcbf --colors -s --standard=.phpcs.xml || exit $?
else
    echo "\e[31mFixer not found.\e[0m"
fi

if [ $FPHP = 0 ]; then
    exit 0
fi

# Cherry picks not allowed skip testing
# exit 0

# Run test before add message to commit
if [ "`phpx /usr/local/bin/composer list | grepx -F "test-ci"`" != "" ]; then
    COMMAND="$(jq '.scripts."test-ci"' composer.json | sed 's/\"//g')"

    if [ "`echo "$COMMAND" | grepx -F "^@php "`" = "" ]; then
        COMMAND="phpx $COMMAND"
    fi
elif [ -f "testx.sh" ]; then
    COMMAND="sh testx.sh"
else
    COMMAND="phpx vendor/bin/phpunit --stop-on-failure --no-coverage"
fi

$COMMAND
