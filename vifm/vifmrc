" t:    Tag current file to select
" av:   [a]ppend [v]isual (Multi-selection) <CR> av to continue
" =:    Filter list
set vicmd=$EDITOR                                               " Command used to edit files in various contexts.
set syscalls                                                    " This makes vifm perform file faster.
set trash                                                       " Use trash directory for security
set history=100                                                 " This is how many directories to store in the directory history.

set nofollowlinks                                               " Automatically resolve symbolic links on l or Enter.
set sortnumbers                                                 " Natural sort of (version) numbers within text.
set undolevels=100                                              " Maximum number of changes that can be undone.

set vimhelp                                                     " Use Vim's format of help file
set scrolloff=3                                                 " Try to leave some space from cursor to upper/lower border in lists

set wildmenu                                                    " Show list of matches on tab completion in command-line mode
set wildstyle=popup                                             " Display completions in a form of popup with descriptions of the matches
set suggestoptions=normal,visual,view,otherpane,keys,marks,registers " Display suggestions in normal, visual and view modes for keys, marks and registers

set norunexec                                                   " Not run an executable file when you press Enter, l or Right Arrow, set this.
set slowfs=curlftpfs                                            " Don't do too many requests to slow file systems


set ignorecase                                                  " Ignore case in search patterns unless it contains at least one uppercase letter
set smartcase
set nohlsearch                                                  " Don't highlight search results automatically
set incsearch                                                   " Use increment searching (search while typing)
set nowrap                                                      " Now wrap by default in preview (default: yes)

" Format for displaying time in file list.
set timefmt=%m/%d\ %H:%M

" Various customization examples
set grepprg=rg\ --no-messages\ --vimgrep\ --follow              " Use ripgrep instead of grep

" Set custom status line look
set statusline="  Hint: %z%= %A %10u:%-7g %15s %20d  "

" ------------------------------------------------------------------------------
" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window
command! reload :write | restart full

" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros like %f, %F, %d, %D may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" Pdf
filextype {*.pdf},<application/pdf> $BROWSER --new-tab %c &
" fileviewer *.pdf,<application/pdf>
"         \ previewx pdf %px %py %pw %ph %c %pc

" PostScript
filextype {*.ps,*.eps,*.ps.gz},<application/postscript>
        \ {View in zathura}
        \ zathura %f,
        \ {View in gv}
        \ gv %c %i &,

" Djvu
filextype {*.djvu},<image/vnd.djvu>
        \ {View in zathura}
        \ zathura %f,
        \ {View in apvlv}
        \ apvlv %f,
" fileviewer *.djvu
"         \ previewx djvu %px %py %pw %ph %c %pc

" Audio
filetype {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,*.acc},
        \<audio/*>
       \ {Play using ffplay}
       \ ffplay -nodisp -autoexit -hide_banner %c,
" fileviewer *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus,*.aac
"         \ previewx audio %px %py %pw %ph %c %pc

" Video
filextype {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]},
         \<video/*>
        \ {View using ffplay}
        \ ffplay -fs -autoexit %f,
        \ {View using vlc}
        \ cvlc --no-video-title-show --fullscreen --play-and-exit --qt-minimal-view %f,
fileviewer {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
        \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
        \*.as[fx]},
        \<video/*>
        \ ffprobe -pretty %c 2>&1
" fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
"         \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
"         \*.as[fx]
"         \<video/*>
"         \ previewx video %px %py %pw %ph %c %pc

" Web
filextype {*.html,*.htm},<text/html>
        \ {Open with dwb}
        \ dwb %f %i &,
        \ {Open with firefox}
        \ $BROWSER %f &,
        \ {Open with uzbl}
        \ uzbl-browser %f %i &,
filetype {*.html,*.htm},<text/html> links, lynx

" Object
filetype {*.o},<application/x-object> nm %f | less

" Man page
filetype {*.[1-8]},<text/troff> man ./%c
fileviewer {*.[1-8]},<text/troff> man ./%c | col -b

" Images
filextype {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
        \ {View in *sxiv}
        \ $VIEWER -b -f -a %f,
" fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.xpm,*.webp,*.gif,*.jfif
"         \ previewx draw %px %py %pw %ph %c %pc

" OpenRaster
filextype *.ora
        \ {Edit in MyPaint}
        \ mypaint %f,

" Mindmap
filextype *.vym
        \ {Open with VYM}
        \ vym %f &,

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" GPG signature
filetype {*.asc},<application/pgp-signature>
       \ {Check signature}
       \ !!gpg --verify %c,

" Torrent
filetype {*.torrent},<application/x-bittorrent> ktorrent %f &
fileviewer {*.torrent},<application/x-bittorrent> dumptorrent -v %c

" FuseZipMount
filetype {*.zip,*.jar,*.war,*.ear,*.oxt,*.apkg},
        \<application/zip,application/java-archive>
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip -sf %c | less,
       \ {Extract here}
       \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt unzip -l %f

" ArchiveMount
filetype {*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.tar.zst,*.tzst},
        \<application/x-tar>
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.xz,*.txz tar -tJf %c
fileviewer *.tar.zst,*.tzst tar -t --zstd -f %c
fileviewer {*.tar},<application/x-tar> tar -tf %c
fileviewer {*.cpio},<application/x-cpio> cpio -t < %c
fileviewer {*.rpm},<application/x-rpm> rpm -q --list %c%q 2> /dev/null

" Rar2FsMount and rar archives
filetype {*.rar},<application/x-rar>
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer {*.rar},<application/x-rar> unrar v %c

" IsoMount
filetype {*.iso},<application/x-iso9660-image>
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
filetype {*.7z},<application/x-7z-compressed>
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer {*.7z},<application/x-7z-compressed> 7z l %c

" Office files
filextype {*.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx,*.ppt},
         \<application/vnd.openxmlformats-officedocument.*,
          \application/msword,
          \application/vnd.ms-excel>
        \ libreoffice %f &
fileviewer {*.doc},<application/msword> catdoc %c
fileviewer {*.docx},
          \<application/
           \vnd.openxmlformats-officedocument.wordprocessingml.document>
         \ docx2txt.pl %f -

" TuDu files
filetype *.tudu tudu -f %c

" Qt projects
filextype *.pro qtcreator %f &

" Directories
filextype */
        \ {View in thunar}
        \ Thunar %f &,

" @thanks https://dev.to/nisidabay/preview-images-videos-fonts-pdfs-in-vifm-3f0i
" ------------------------------------------------------------------------------
" Extra file open and view settings:
"   filetype    is used for console-based applications
"   filextype   is used for graphical applications
" ------------------------------------------------------------------------------

" csv
filextype {*.csv},<application/csv> $EDITOR %c &

" Markdown files
filetype {*.md},<text/markdown> $EDITOR %c &

" Text files
filetype {*.txt},<text/plain> $EDITOR %c &

" Directories
fileviewer */ tree -L 1 -I .git -I node_modules %c

" ------------------------------------------------------------------------------
" Text-based file previews with previewx
" ------------------------------------------------------------------------------

fileviewer *.csv,*.txt,*.log,*.md,*.markdown,*.json
        \ bat --paging=never --style=changes --color=always %c

fileviewer *.py,*.js,*.jsx,*.ts,*.tsx,*.css,*.html,*.php,*.c,*.cpp,*.h,*.rb,*.sh,*.rs,*.go
        \ bat --paging=never --style=changes --color=always %c

" ------------------------------------------------------------------------------

" What should be saved automatically between vifm sessions.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" ------------------------------------------------------------------------------

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Interaction with system clipboard (as netrw)
" Yank current directory path
nnoremap yd :!echo %d | tr -d '\n' | xclip -selection clipboard<cr>
" Yank current file path
nnoremap yf :!echo %c:p | tr -d '\n' | xclip -selection clipboard<cr>

" Open console in current directory
nnoremap R :!urxvt &<cr>

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap <f10> :write | edit $MYVIFMRC | restart full<cr>

" Toggle wrap
nnoremap yow :set wrap!<cr>

" " Example of standard two-panel file managers mappings
" nnoremap <f3> :!less %f<cr>
" nnoremap <f4> :edit<cr>
" nnoremap <f5> :copy<cr>
" nnoremap <f6> :move<cr>
" nnoremap <f7> :mkdir<space>
" nnoremap <f8> :delete<cr>

" Open all images in current directory as thumbnail mode
nnoremap I :!$VIEWER -b -f -t -r %d & <cr>

" ------------------------------------------------------------------------------

" Block particular shortcut
" nnoremap <left> <nop>

" ------------------------------------------------------------------------------

colorscheme $BAT_THEME
